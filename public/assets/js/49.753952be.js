(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{561:function(o,e,s){"use strict";s.r(e);var i=s(6),n=Object(i.a)({},(function(){var o=this,e=o.$createElement,s=o._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[s("h2",{attrs:{id:"session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[o._v("#")]),o._v(" Session")]),o._v(" "),s("ol",[s("li",[o._v("session 是保存在服务器端的内存中，理论上是没有限制的，只要内存够大")]),o._v(" "),s("li",[o._v("浏览器第一次访问服务器时会创建一个 session 对象并返回一个 JSESSIONID=ID 的值，创建一个 Cookie 对象 key 为 JSSIONID，value 为 ID 的值，将这个 Cookie 写回浏览器")]),o._v(" "),s("li",[o._v("浏览器在第二次访问服务器的时候携带 Cookie 信息 JSESSIONID=ID 的值，如果该 JSESSIONID 的 session 已经销毁，那么会重新创建一个新的 session 再返回一个新的 JSESSIONID 通过 Cookie 返回到浏览器")]),o._v(" "),s("li",[o._v("针对一个 web 项目，一个浏览器共享一个 session，多个 web 项目 session 不共享。如果 web 服务器做了负载均衡，那么下一个操作请求到了另一台服务器的时候 session 会丢失。")]),o._v(" "),s("li",[o._v("session 是基于 Cookie 技术实现，重启浏览器后再次访问原有的连接依然会创建一个新的 session，因为 Cookie 在关闭浏览器后就会消失，但是原来服务器的 Session 还在，只有等到了销毁的时间才会自动销毁")])]),o._v(" "),s("h2",{attrs:{id:"cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[o._v("#")]),o._v(" Cookie")]),o._v(" "),s("p",[o._v("Cookie 实际上是一小段文本信息。客户端请求服务器，如果服务器需要记录该用户状态，就使用 response 向客户端浏览器颁发一个 Cookie。客户端浏览器会把 Cookie 保存起来。当浏览器再请求该网站时，浏览器把请求的网址连同该 Cookie 一同提交给服务器。服务器检查该 Cookie，以此来辨认用户状态。服务器还可以根据需要修改 Cookie 的内容。")]),o._v(" "),s("h2",{attrs:{id:"session-和-cookie-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#session-和-cookie-的区别"}},[o._v("#")]),o._v(" Session 和 Cookie 的区别")]),o._v(" "),s("ol",[s("li",[o._v("Cookie 和 Session 都是会话技术，Cookie 运行在客户端，Session 运行在服务器端")]),o._v(" "),s("li",[o._v("Cookie 有大小限制以及 Cookie 存储在浏览器中的个数也有限制，Session 没有大小限制，与服务器内存大小有关")]),o._v(" "),s("li",[o._v("Cookie 有安全隐患，通过拦截或本地文件找得到存放的 Cookie 后可以进行攻击")]),o._v(" "),s("li",[o._v("Session 保存在服务器端上存在一段时间才会消失，如果 session 过多会增加服务器的压力")])]),o._v(" "),s("h2",{attrs:{id:"token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#token"}},[o._v("#")]),o._v(" Token")]),o._v(" "),s("p",[o._v("Token 的由来：")]),o._v(" "),s("ul",[s("li",[o._v("Token 是在客户端频繁向服务器请求数据，服务器频繁地去数据库查询用户名和密码并进行比对，判断用户名和密码是否正确，并作出相应提示，在这样的背景下产生的。")])]),o._v(" "),s("p",[o._v("Token 的定义：")]),o._v(" "),s("ul",[s("li",[o._v("Token 是服务端生成的一串字符串，以客户端进行请求一个令牌，当第一次登录后，服务器生成一个 Token 便将此 Token 返回给客户端，以后客户端只需带上这个 Token 前来请求数据即可，无需再次带上用户名和密码。")])]),o._v(" "),s("p",[o._v("使用 Token 的目的：")]),o._v(" "),s("ul",[s("li",[o._v("Token 的目的是为了减轻服务器的压力，减少频繁地查询数据库，是服务器更加健壮。")])])])}),[],!1,null,null,null);e.default=n.exports}}]);