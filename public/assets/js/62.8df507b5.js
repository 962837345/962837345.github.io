(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{578:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"boolean的类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean的类型转换"}},[t._v("#")]),t._v(" Boolean的类型转换")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("任何对象转为布尔值，都得true")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"title"}),a("p",[t._v('在JS中，只有0，-0，NaN，"", null，undefined这六个值转为布尔值时，结果为false')])]),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("输出结果："),a("code",[t._v("hi")])]),t._v(" "),a("p",[t._v("解析：if(x)中的x期望的是一个布尔类型的原始值，而在实际中x是new出来的Boolean对象，任何对象转为布尔值，\n都为true   Boolean(0)将0转换为布尔，结果为false，这里没有使用new，如果使用new，结果依然为true")]),t._v(" "),a("h2",{attrs:{id:"number的类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number的类型转换"}},[t._v("#")]),t._v(" Number的类型转换")]),t._v(" "),a("p",[t._v("以下的转化都为0")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h2",{attrs:{id:"类型转换规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换规则"}},[t._v("#")]),t._v(" == 类型转换规则")]),t._v(" "),a("ol",[a("li",[t._v("如果有一个操作数是布尔值，则在比较相等性之前先将其转换为数值——false转为0，true转为1")]),t._v(" "),a("li",[t._v("如果一个操作数是字符串，另一个操作数是数值，在比较相等性之前先将字符串转换为数值")]),t._v(" "),a("li",[t._v("如果一个操作数是对象，另一个操作数不是，则调用对象的valueOf()方法，用得到的基本类型值按照前面的规则进行比较，valueOf()方法无效时，调用toString()方法")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("ol",[a("li",[t._v("null和undefined是相等的")]),t._v(" "),a("li",[t._v("要比较相等性之前，不能将null和undefined转换成其他任何值")]),t._v(" "),a("li",[t._v("如果有一个操作数是NaN，则相等操作符返回false，而不相等操作符返回true。两个操作数都NaN返回也是false，因为按照规定，NaN不等于NaN")]),t._v(" "),a("li",[t._v("如果两个操作数都是对象，则比较它们是不是同一个对象，如果两个操作数都指向同一个对象，则相等操作符返回true；否则，返回false")])])]),a("h3",{attrs:{id:"为true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为true"}},[t._v("#")]),t._v(" [] == ![] 为true")]),t._v(" "),a("ol",[a("li",[t._v("根据运算符优先级，!的优先级大于==，所有会先执行![]\n"),a("ul",[a("li",[t._v('!可以将变量转换成boolean类型，在JS中，只有0，-0，NaN，"", null，undefined这六个值转为布尔值时，结果为false，其余都为true，所以[]转换为boolean类型就为true，而![]就为false')])])]),t._v(" "),a("li",[t._v("上面的规则1，如果有一个操作数是布尔值，则在比较相等性之前先将其转换为数值——false转为0，true转为1，所以![] == false == 0")]),t._v(" "),a("li",[t._v("上面的规则3，如果一个操作数是对象，另一个操作数不是，则调用对象的valueOf()方法，用得到的基本类型值按照前面的\n规则进行比较，valueOf()方法无效时，调用toString()方法，这里先调用valueOf()方法，valueOf()方法返回的也是[],\n所以调用toString()方法，得到一个空字符串,此时[] == 0相当于'' == 0")]),t._v(" "),a("li",[t._v("上面的规则2，如果一个操作数是字符串，另一个操作数是数值，在比较相等性之前先将字符串转换为数值，空字符串转换为\n数值为0,所以此时 '' == 0相当于0 == 0所以结果返回true")])]),t._v(" "),a("p",[t._v("过程：[] == ![] --\x3e [] == false --\x3e [] == 0 --\x3e '' == 0 --\x3e 0 == 0")]),t._v(" "),a("h3",{attrs:{id:"为false"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为false"}},[t._v("#")]),t._v(" {} == !{} 为false")]),t._v(" "),a("ol",[a("li",[t._v("同上，根据运算符优先级，!的优先级大于==，所有会先执行!{}，所以{} == !{}相当于{} == false")]),t._v(" "),a("li",[t._v("同上，{} == false相当于{} == 0")]),t._v(" "),a("li",[t._v("上面的规则3，{}调用{}.valueOf()方法返回也是{},所以调用{}.toString()方法，返回的是一个字符串类型的[object Object]")]),t._v(" "),a("li",[t._v("上面的规则2，如果一个操作数是字符串，另一个操作数是数值，在比较相等性之前先将字符串转换为数值，此时执行Number([object Object])，返回的是NaN")]),t._v(" "),a("li",[t._v("上面的提示中的第3点，如果有一个操作数是NaN，则相等操作符返回false，所以结果为false")])]),t._v(" "),a("p",[t._v("过程：{} == !{} --\x3e {} == false --\x3e {} == 0 --\x3e [object Object] == 0 --\x3e NaN == 0")])])}),[],!1,null,null,null);s.default=e.exports}}]);