(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{527:function(e,l,i){"use strict";i.r(l);var t=i(4),s=Object(t.a)({},(function(){var e=this,l=e.$createElement,i=e._self._c||l;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h2",{attrs:{id:"flex相关的属性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex相关的属性"}},[e._v("#")]),e._v(" flex相关的属性")]),e._v(" "),i("h3",{attrs:{id:"应用在flex-container上的css属性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#应用在flex-container上的css属性"}},[e._v("#")]),e._v(" 应用在flex container上的CSS属性")]),e._v(" "),i("ul",[i("li",[e._v("flex-direction")]),e._v(" "),i("li",[e._v("justify-content")]),e._v(" "),i("li",[e._v("align-items")]),e._v(" "),i("li",[e._v("flex-warp")]),e._v(" "),i("li",[e._v("flex-flow")]),e._v(" "),i("li",[e._v("align-content")])]),e._v(" "),i("h3",{attrs:{id:"应用在flex-items上的css属性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#应用在flex-items上的css属性"}},[e._v("#")]),e._v(" 应用在flex items上的CSS属性")]),e._v(" "),i("ul",[i("li",[e._v("order")]),e._v(" "),i("li",[e._v("align-self")]),e._v(" "),i("li",[e._v("flex-grow")]),e._v(" "),i("li",[e._v("flex-shrink")]),e._v(" "),i("li",[e._v("flex-basis")]),e._v(" "),i("li",[e._v("flex")])]),e._v(" "),i("h2",{attrs:{id:"flex-container"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-container"}},[e._v("#")]),e._v(" flex container")]),e._v(" "),i("h3",{attrs:{id:"flex-direction"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[e._v("#")]),e._v(" flex-direction")]),e._v(" "),i("p",[e._v("决定主轴（main axis）的方向")]),e._v(" "),i("ul",[i("li",[e._v("row：主轴从左到右")]),e._v(" "),i("li",[e._v("row-reverse：主轴从右到左")]),e._v(" "),i("li",[e._v("column：主轴从上到下")]),e._v(" "),i("li",[e._v("column-reverse：主轴从下到上")])]),e._v(" "),i("h3",{attrs:{id:"justify-content"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#justify-content"}},[e._v("#")]),e._v(" justify-content")]),e._v(" "),i("p",[e._v("决定flex items在主轴的对齐方式")]),e._v(" "),i("ul",[i("li",[e._v("flex-start（默认值）：与main start对齐")]),e._v(" "),i("li",[e._v("flex-end：与main end对齐")]),e._v(" "),i("li",[e._v("center：居中对齐")]),e._v(" "),i("li",[e._v("space-between：\n"),i("ul",[i("li",[e._v("flex items之间的距离相等")]),e._v(" "),i("li",[e._v("与main start、main end两端对齐")])])]),e._v(" "),i("li",[e._v("space-evenly：\n"),i("ul",[i("li",[e._v("flex items之间的距离相等")]),e._v(" "),i("li",[e._v("flex items与main start、main end之间的距离等于flex items之间的距离")])])]),e._v(" "),i("li",[e._v("space-around：\n"),i("ul",[i("li",[e._v("flex items之间的距离相等")]),e._v(" "),i("li",[e._v("flex items与main start、main end之间的距离是flex items之间距离的一半")])])])]),e._v(" "),i("h3",{attrs:{id:"align-items"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[e._v("#")]),e._v(" align-items")]),e._v(" "),i("p",[e._v("决定flex items在交叉轴（cross axis）上的对齐方式")]),e._v(" "),i("ul",[i("li",[e._v("normal：在弹性布局中，效果和stretch一样")]),e._v(" "),i("li",[e._v("stretch：当flex items在交叉轴方向的size为auto时，会自动拉伸至填充flex container")]),e._v(" "),i("li",[e._v("flex-start：与cross start对齐")]),e._v(" "),i("li",[e._v("flex-end：与cross end对齐")]),e._v(" "),i("li",[e._v("center：居中对齐")]),e._v(" "),i("li",[e._v("baseline：与基准线对齐")])]),e._v(" "),i("h3",{attrs:{id:"flex-warp"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-warp"}},[e._v("#")]),e._v(" flex-warp")]),e._v(" "),i("p",[e._v("默认情况下，flex items都会在同一行显示")]),e._v(" "),i("ul",[i("li",[e._v("nowarp：不换行")]),e._v(" "),i("li",[e._v("warp：换行")]),e._v(" "),i("li",[e._v("warp-reverse：多行（对比warp，cross start与cross end相反，很少使用）")])]),e._v(" "),i("h3",{attrs:{id:"flex-flow"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow"}},[e._v("#")]),e._v(" flex-flow")]),e._v(" "),i("p",[e._v("flex-flow为缩写属性：flex-direction || flex-warp")]),e._v(" "),i("h3",{attrs:{id:"align-content"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#align-content"}},[e._v("#")]),e._v(" align-content")]),e._v(" "),i("p",[e._v("align-content决定了多行的flex items在交叉轴上的对齐方式，用法与justify-content类似")]),e._v(" "),i("ul",[i("li",[e._v("stretch：（默认值）与align-items的stretch类似")]),e._v(" "),i("li",[e._v("flex-start：与cross start对齐")]),e._v(" "),i("li",[e._v("flex-end：与cross end对齐")]),e._v(" "),i("li",[e._v("center：居中对齐")]),e._v(" "),i("li",[e._v("space-between：\n"),i("ul",[i("li",[e._v("flex items之间的距离相等")]),e._v(" "),i("li",[e._v("与cross start、cross end两端对齐")])])]),e._v(" "),i("li",[e._v("space-around：\n"),i("ul",[i("li",[e._v("flex items之间的距离相等")]),e._v(" "),i("li",[e._v("flex items与cross start、cross end之间的距离时flex items之间距离的一半")])])]),e._v(" "),i("li",[e._v("space-evenly：\n"),i("ul",[i("li",[e._v("flex items之间的距离相等")]),e._v(" "),i("li",[e._v("flex items与cross start、cross end之间的距离等于flex items之间的距离")])])])]),e._v(" "),i("h2",{attrs:{id:"flex-items"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-items"}},[e._v("#")]),e._v(" flex items")]),e._v(" "),i("h3",{attrs:{id:"order"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[e._v("#")]),e._v(" order")]),e._v(" "),i("p",[e._v("order决定了flex items的排布顺序")]),e._v(" "),i("ul",[i("li",[e._v("可以设置任意整数（正整数、负整数、0），值越小就越排在前面")]),e._v(" "),i("li",[e._v("默认值是0")])]),e._v(" "),i("h3",{attrs:{id:"align-self"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#align-self"}},[e._v("#")]),e._v(" align-self")]),e._v(" "),i("p",[e._v("flex items可以通过align-self覆盖flex container设置的align-items")]),e._v(" "),i("ul",[i("li",[e._v("auto（默认值）：遵从flex container的align-items设置")]),e._v(" "),i("li",[e._v("stretch、flex-start、flexx-end、center、baseline，效果跟align-items一致")])]),e._v(" "),i("h3",{attrs:{id:"flex-grow"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow"}},[e._v("#")]),e._v(" flex-grow")]),e._v(" "),i("ul",[i("li",[e._v("flew-grow决定了flex items如何扩展\n"),i("ul",[i("li",[e._v("可以设置任意非负数字（正小数、正整数、0），默认值是0")]),e._v(" "),i("li",[e._v("当flex container在主轴方向上有剩余size时，flex-grow属性才会有效")])])]),e._v(" "),i("li",[e._v("如果所有的flex items的flex-grow总和超过1，每个flex item扩展的size为：\n"),i("ul",[i("li",[e._v("flex container的剩余size * flex-grow / sum")])])]),e._v(" "),i("li",[e._v("如果所有flex items的flex-grow总和不超过1，每个flex item扩展的size为：\n"),i("ul",[i("li",[e._v("flex container的剩余size * flex-grow")])])]),e._v(" "),i("li",[e._v("flex items扩展后的最终size不能超过max-width\\max-height")])]),e._v(" "),i("h3",{attrs:{id:"flex-shrink"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-shrink"}},[e._v("#")]),e._v(" flex-shrink")]),e._v(" "),i("ul",[i("li",[e._v("flew-shrink决定了flew items如何收缩\n"),i("ul",[i("li",[e._v("可以设置任意非负数字（正小数、正整数、0），默认值是1")]),e._v(" "),i("li",[e._v("当flex items在主轴方向上超过了flex container的size，flex-shrink属性才会有效")])])]),e._v(" "),i("li",[e._v("如果所有flex items的flex-shrink总和超过1，每个flex item收缩的size为：\n"),i("ul",[i("li",[e._v("flex items超出flex container的size * 收缩比例 / 所有flex items 的收缩比例之和")])])]),e._v(" "),i("li",[e._v("如果所有flex items的flex-shrink总和sum不超过1，每个flex item收缩的size为：\n"),i("ul",[i("li",[e._v("flex items超出flex container的size * sum * 收缩比例 / 所有flex items的收缩比例之和")]),e._v(" "),i("li",[e._v("收缩比例 = flex-shrink * flex item的base size")]),e._v(" "),i("li",[e._v("base size就是flex item放入flex container之前的size")])])]),e._v(" "),i("li",[e._v("flex items收缩后的最终size不能小于min-width\\min-height")])]),e._v(" "),i("h3",{attrs:{id:"flex-basis"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis"}},[e._v("#")]),e._v(" flex-basis")]),e._v(" "),i("ul",[i("li",[e._v("flex-basis用来设置flex items在主轴方向上的base size\n"),i("ul",[i("li",[e._v("auto（默认值） = 具体的宽度数值")])])]),e._v(" "),i("li",[e._v("决定flex items最终base size的因素，从优先级高到低\n"),i("ul",[i("li",[e._v("max-width\\max-height\\min-width\\min-height")]),e._v(" "),i("li",[e._v("flex-basis")]),e._v(" "),i("li",[e._v("width\\height")]),e._v(" "),i("li",[e._v("内容本身的size")])])])]),e._v(" "),i("h3",{attrs:{id:"flex"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[e._v("#")]),e._v(" flex")]),e._v(" "),i("ul",[i("li",[e._v("flex是flex-grow || flex-shrink || flex-basis 的简写，flex属性可以指定1个，2个或3个值")]),e._v(" "),i("li",[e._v("单值语法：值必须为以下其中之一：\n"),i("ul",[i("li",[e._v("一个无单位数（number）：它会被当作flex-grow的值")]),e._v(" "),i("li",[e._v("一个有效的宽度（width）值：它会被当作flex-basis的值")]),e._v(" "),i("li",[e._v("关键字none，auto或initial")])])]),e._v(" "),i("li",[e._v("双值语法：第一个值必须为一个无单位数，并且它会被当作flex-grow的值\n"),i("ul",[i("li",[e._v("第二个值必须为以下之一：\n"),i("ul",[i("li",[e._v("一个无单位数：它会被当作flex-shrink的值")]),e._v(" "),i("li",[e._v("一个有效的宽度值：它会被当作flex-basis的值")])])])])]),e._v(" "),i("li",[e._v("三值语法：\n"),i("ul",[i("li",[e._v("第一个值必须为一个无单位数，并且它会被当作flex-grow的值")]),e._v(" "),i("li",[e._v("第二个值必须为一个无单位数，并且它会被当作flex-shrink的值")]),e._v(" "),i("li",[e._v("第三个值必须为一个有效的宽度值，并且它会被当作flex-basis的值")])])])])])}),[],!1,null,null,null);l.default=s.exports}}]);