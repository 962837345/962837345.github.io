(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{572:function(e,l,i){"use strict";i.r(l);var t=i(6),s=Object(t.a)({},(function(){var e=this,l=e.$createElement,i=e._self._c||l;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h2",{attrs:{id:"flex-相关的属性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-相关的属性"}},[e._v("#")]),e._v(" flex 相关的属性")]),e._v(" "),i("h3",{attrs:{id:"应用在-flex-container-上的-css-属性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#应用在-flex-container-上的-css-属性"}},[e._v("#")]),e._v(" 应用在 flex container 上的 CSS 属性")]),e._v(" "),i("ul",[i("li",[e._v("flex-direction")]),e._v(" "),i("li",[e._v("justify-content")]),e._v(" "),i("li",[e._v("align-items")]),e._v(" "),i("li",[e._v("flex-warp")]),e._v(" "),i("li",[e._v("flex-flow")]),e._v(" "),i("li",[e._v("align-content")])]),e._v(" "),i("h3",{attrs:{id:"应用在-flex-items-上的-css-属性"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#应用在-flex-items-上的-css-属性"}},[e._v("#")]),e._v(" 应用在 flex items 上的 CSS 属性")]),e._v(" "),i("ul",[i("li",[e._v("order")]),e._v(" "),i("li",[e._v("align-self")]),e._v(" "),i("li",[e._v("flex-grow")]),e._v(" "),i("li",[e._v("flex-shrink")]),e._v(" "),i("li",[e._v("flex-basis")]),e._v(" "),i("li",[e._v("flex")])]),e._v(" "),i("h2",{attrs:{id:"flex-container"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-container"}},[e._v("#")]),e._v(" flex container")]),e._v(" "),i("h3",{attrs:{id:"flex-direction"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[e._v("#")]),e._v(" flex-direction")]),e._v(" "),i("p",[e._v("决定主轴（main axis）的方向")]),e._v(" "),i("ul",[i("li",[e._v("row：主轴从左到右")]),e._v(" "),i("li",[e._v("row-reverse：主轴从右到左")]),e._v(" "),i("li",[e._v("column：主轴从上到下")]),e._v(" "),i("li",[e._v("column-reverse：主轴从下到上")])]),e._v(" "),i("h3",{attrs:{id:"justify-content"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#justify-content"}},[e._v("#")]),e._v(" justify-content")]),e._v(" "),i("p",[e._v("决定 flex items 在主轴的对齐方式")]),e._v(" "),i("ul",[i("li",[e._v("flex-start（默认值）：与 main start 对齐")]),e._v(" "),i("li",[e._v("flex-end：与 main end 对齐")]),e._v(" "),i("li",[e._v("center：居中对齐")]),e._v(" "),i("li",[e._v("space-between：\n"),i("ul",[i("li",[e._v("flex items 之间的距离相等")]),e._v(" "),i("li",[e._v("与 main start、main end 两端对齐")])])]),e._v(" "),i("li",[e._v("space-evenly：\n"),i("ul",[i("li",[e._v("flex items 之间的距离相等")]),e._v(" "),i("li",[e._v("flex items 与 main start、main end 之间的距离等于 flex items 之间的距离")])])]),e._v(" "),i("li",[e._v("space-around：\n"),i("ul",[i("li",[e._v("flex items 之间的距离相等")]),e._v(" "),i("li",[e._v("flex items 与 main start、main end 之间的距离是 flex items 之间距离的一半")])])])]),e._v(" "),i("h3",{attrs:{id:"align-items"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[e._v("#")]),e._v(" align-items")]),e._v(" "),i("p",[e._v("决定 flex items 在交叉轴（cross axis）上的对齐方式")]),e._v(" "),i("ul",[i("li",[e._v("normal：在弹性布局中，效果和 stretch 一样")]),e._v(" "),i("li",[e._v("stretch：当 flex items 在交叉轴方向的 size 为 auto 时，会自动拉伸至填充 flex container")]),e._v(" "),i("li",[e._v("flex-start：与 cross start 对齐")]),e._v(" "),i("li",[e._v("flex-end：与 cross end 对齐")]),e._v(" "),i("li",[e._v("center：居中对齐")]),e._v(" "),i("li",[e._v("baseline：与基准线对齐")])]),e._v(" "),i("h3",{attrs:{id:"flex-warp"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-warp"}},[e._v("#")]),e._v(" flex-warp")]),e._v(" "),i("p",[e._v("默认情况下，flex items 都会在同一行显示")]),e._v(" "),i("ul",[i("li",[e._v("nowarp：不换行")]),e._v(" "),i("li",[e._v("warp：换行")]),e._v(" "),i("li",[e._v("warp-reverse：多行（对比 warp，cross start 与 cross end 相反，很少使用）")])]),e._v(" "),i("h3",{attrs:{id:"flex-flow"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow"}},[e._v("#")]),e._v(" flex-flow")]),e._v(" "),i("p",[e._v("flex-flow 为缩写属性：flex-direction || flex-warp")]),e._v(" "),i("h3",{attrs:{id:"align-content"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#align-content"}},[e._v("#")]),e._v(" align-content")]),e._v(" "),i("p",[e._v("align-content 决定了多行的 flex items 在交叉轴上的对齐方式，用法与 justify-content 类似")]),e._v(" "),i("ul",[i("li",[e._v("stretch：（默认值）与 align-items 的 stretch 类似")]),e._v(" "),i("li",[e._v("flex-start：与 cross start 对齐")]),e._v(" "),i("li",[e._v("flex-end：与 cross end 对齐")]),e._v(" "),i("li",[e._v("center：居中对齐")]),e._v(" "),i("li",[e._v("space-between：\n"),i("ul",[i("li",[e._v("flex items 之间的距离相等")]),e._v(" "),i("li",[e._v("与 cross start、cross end 两端对齐")])])]),e._v(" "),i("li",[e._v("space-around：\n"),i("ul",[i("li",[e._v("flex items 之间的距离相等")]),e._v(" "),i("li",[e._v("flex items 与 cross start、cross end 之间的距离时 flex items 之间距离的一半")])])]),e._v(" "),i("li",[e._v("space-evenly：\n"),i("ul",[i("li",[e._v("flex items 之间的距离相等")]),e._v(" "),i("li",[e._v("flex items 与 cross start、cross end 之间的距离等于 flex items 之间的距离")])])])]),e._v(" "),i("h2",{attrs:{id:"flex-items"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-items"}},[e._v("#")]),e._v(" flex items")]),e._v(" "),i("h3",{attrs:{id:"order"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[e._v("#")]),e._v(" order")]),e._v(" "),i("p",[e._v("order 决定了 flex items 的排布顺序")]),e._v(" "),i("ul",[i("li",[e._v("可以设置任意整数（正整数、负整数、0），值越小就越排在前面")]),e._v(" "),i("li",[e._v("默认值是 0")])]),e._v(" "),i("h3",{attrs:{id:"align-self"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#align-self"}},[e._v("#")]),e._v(" align-self")]),e._v(" "),i("p",[e._v("flex items 可以通过 align-self 覆盖 flex container 设置的 align-items")]),e._v(" "),i("ul",[i("li",[e._v("auto（默认值）：遵从 flex container 的 align-items 设置")]),e._v(" "),i("li",[e._v("stretch、flex-start、flex-end、center、baseline，效果跟 align-items 一致")])]),e._v(" "),i("h3",{attrs:{id:"flex-grow"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow"}},[e._v("#")]),e._v(" flex-grow")]),e._v(" "),i("ul",[i("li",[e._v("flew-grow 决定了 flex items 如何扩展\n"),i("ul",[i("li",[e._v("可以设置任意非负数字（正小数、正整数、0），默认值是 0")]),e._v(" "),i("li",[e._v("当 flex container 在主轴方向上有剩余 size 时，flex-grow 属性才会有效")])])]),e._v(" "),i("li",[e._v("如果所有的 flex items 的 flex-grow 总和超过 1，每个 flex item 扩展的 size 为：\n"),i("ul",[i("li",[e._v("flex container 的剩余 size * flex-grow / sum")])])]),e._v(" "),i("li",[e._v("如果所有 flex items 的 flex-grow 总和不超过 1，每个 flex item 扩展的 size 为：\n"),i("ul",[i("li",[e._v("flex container 的剩余 size * flex-grow")])])]),e._v(" "),i("li",[e._v("flex items 扩展后的最终 size 不能超过 max-width\\max-height")])]),e._v(" "),i("h3",{attrs:{id:"flex-shrink"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-shrink"}},[e._v("#")]),e._v(" flex-shrink")]),e._v(" "),i("ul",[i("li",[e._v("flew-shrink 决定了 flew items 如何收缩\n"),i("ul",[i("li",[e._v("可以设置任意非负数字（正小数、正整数、0），默认值是 1")]),e._v(" "),i("li",[e._v("当 flex items 在主轴方向上超过了 flex container 的 size，flex-shrink 属性才会有效")])])]),e._v(" "),i("li",[e._v("如果所有 flex items 的 flex-shrink 总和超过 1，每个 flex item 收缩的 size 为：\n"),i("ul",[i("li",[e._v("flex items 超出 flex container 的 size * 收缩比例 / 所有 flex items 的收缩比例之和")])])]),e._v(" "),i("li",[e._v("如果所有 flex items 的 flex-shrink 总和 sum 不超过 1，每个 flex item 收缩的 size 为：\n"),i("ul",[i("li",[e._v("flex items 超出 flex container 的 size _ sum _ 收缩比例 / 所有 flex items 的收缩比例之和")]),e._v(" "),i("li",[e._v("收缩比例 = flex-shrink * flex item 的 base size")]),e._v(" "),i("li",[e._v("base size 就是 flex item 放入 flex container 之前的 size")])])]),e._v(" "),i("li",[e._v("flex items 收缩后的最终 size 不能小于 min-width\\min-height")])]),e._v(" "),i("h3",{attrs:{id:"flex-basis"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis"}},[e._v("#")]),e._v(" flex-basis")]),e._v(" "),i("ul",[i("li",[e._v("flex-basis 用来设置 flex items 在主轴方向上的 base size\n"),i("ul",[i("li",[e._v("auto（默认值） = 具体的宽度数值")])])]),e._v(" "),i("li",[e._v("决定 flex items 最终 base size 的因素，从优先级高到低\n"),i("ul",[i("li",[e._v("max-width\\max-height\\min-width\\min-height")]),e._v(" "),i("li",[e._v("flex-basis")]),e._v(" "),i("li",[e._v("width\\height")]),e._v(" "),i("li",[e._v("内容本身的 size")])])])]),e._v(" "),i("h3",{attrs:{id:"flex"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[e._v("#")]),e._v(" flex")]),e._v(" "),i("ul",[i("li",[e._v("flex 是 flex-grow || flex-shrink || flex-basis 的简写，flex 属性可以指定 1 个，2 个或 3 个值")]),e._v(" "),i("li",[e._v("单值语法：值必须为以下其中之一：\n"),i("ul",[i("li",[e._v("一个无单位数（number）：它会被当作 flex-grow 的值")]),e._v(" "),i("li",[e._v("一个有效的宽度（width）值：它会被当作 flex-basis 的值")]),e._v(" "),i("li",[e._v("关键字 none，auto 或 initial")])])]),e._v(" "),i("li",[e._v("双值语法：第一个值必须为一个无单位数，并且它会被当作 flex-grow 的值\n"),i("ul",[i("li",[e._v("第二个值必须为以下之一：\n"),i("ul",[i("li",[e._v("一个无单位数：它会被当作 flex-shrink 的值")]),e._v(" "),i("li",[e._v("一个有效的宽度值：它会被当作 flex-basis 的值")])])])])]),e._v(" "),i("li",[e._v("三值语法：\n"),i("ul",[i("li",[i("p",[e._v("第一个值必须为一个无单位数，并且它会被当作 flex-grow 的值")])]),e._v(" "),i("li",[i("p",[e._v("第二个值必须为一个无单位数，并且它会被当作 flex-shrink 的值")])]),e._v(" "),i("li",[i("p",[e._v("第三个值必须为一个有效的宽度值，并且它会被当作 flex-basis 的值")])])])])]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"title"}),i("p",[e._v("flex 实现父窗口中的三个子项中两个居左，一个居右效果")])]),i("p",[e._v("在 flex 布局中如果某个元素的"),i("code",[e._v("margin")]),e._v("为"),i("code",[e._v("auto")]),e._v("，那么它的 margin 将会自动填充为剩下的空间")]),e._v(" "),i("p",[e._v("因此只需要在第三个子项中设置 margin-left:auto 就可以实现该效果")])])}),[],!1,null,null,null);l.default=s.exports}}]);