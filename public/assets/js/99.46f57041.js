(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{611:function(t,e,n){"use strict";n.r(e);var D=n(6),O=Object(D.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("ol",[n("li",[n("p",[t._v("仅仅修改虚拟DOM中内容，不会带来页面的排版和重绘操作。在完成虚拟DOM修改后，进行真实DOM的修改，才会使页面重绘。")])]),t._v(" "),n("li",[n("p",[t._v("虚拟DOM进行频繁修改，然后一次性比较并修改真实DOM中需要修改的部分，最后并在真实DOM中进行排版和重绘，减少过多的\nDOM节点排版与重绘损耗。")])]),t._v(" "),n("li",[n("p",[t._v("真实DOM中，过多的内容修改，会带来多次的页面重绘，极大的损耗页面的性能。而在使用虚拟DOM时，不管一次修改了多少内容，\n最后只会发生一次页面的重排和重绘，大大的提高了页面的性能。")])])]),t._v(" "),n("h2",{attrs:{id:"虚拟dom的优势"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom的优势"}},[t._v("#")]),t._v(" 虚拟DOM的优势")]),t._v(" "),n("p",[t._v("虚拟DOM是对DOM的抽象，本质上是JS对象")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("首先，前端性能优化的一个秘诀就是尽可能少地操作DOM，DOM相对较慢，而且频繁变动DOM会造成浏览器的回流和重绘，\n因此我们需要这一层抽象，在绘制过程中尽可能地一次性将差异更新到DOM中，这样保证了DOM不会出现性能很差的情况。")])]),t._v(" "),n("li",[n("p",[t._v("其次，现代前端框架的一个基本要求就是无需手动操作DOM，不仅因为手动操作DOM无法保证程序性能，多人协作的项目中\n如果review不严格，可能会有开发者写出性能较低的代码，而且省略手动DOM操作可以大大提高开发效率。")])])])])}),[],!1,null,null,null);e.default=O.exports}}]);