(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{563:function(t,e,r){"use strict";r.r(e);var s=r(6),i=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"页面导入样式时，使用link和-import有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#页面导入样式时，使用link和-import有什么区别"}},[t._v("#")]),t._v(" 页面导入样式时，使用link和@import有什么区别?")]),t._v(" "),r("ol",[r("li",[t._v("本质的差别：link属于XHTML标签，而@import完全是CSS提供的一种方式")]),t._v(" "),r("li",[t._v("加载顺序的差别：当一个页面被加载的时候，link引用的CSS会同时被加载，而@import引用的CSS会等到页面\n全部被下载再被加载。所以有时候浏览器@import加载CSS的页面时开始会没有样式，出现闪烁，网速慢的时候会很明显")]),t._v(" "),r("li",[t._v("兼容性的差别：@import是CSS2.1提出的，所以老的浏览器不支持，@import只有在IE5以上才能识别，而link标签无此问题")]),t._v(" "),r("li",[t._v("使用dom控制样式的差别：当使用js控制dom改变样式时，只能使用link标签，因为@import不是dom可以控制的")])]),t._v(" "),r("h2",{attrs:{id:"请简述xmlhttprequest、jsonp的适用场景，并针对两种请求形式简述如何检测请求错误"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#请简述xmlhttprequest、jsonp的适用场景，并针对两种请求形式简述如何检测请求错误"}},[t._v("#")]),t._v(" 请简述XMLHttpRequest、JSONP的适用场景，并针对两种请求形式简述如何检测请求错误")]),t._v(" "),r("ol",[r("li",[t._v("XMLHttpRequest用于浏览器端与服务器端异步请求数据从而实现对页面的无刷新修改，支持GET/POST请求，一般用于非跨域的场景。如果需要使用XMLHttpRequest跨域请求数据，需要通过CORS头支持。 JSONP用于跨域请求数据的场景，只支持GET请求。")]),t._v(" "),r("li",[t._v("XMLHttpRequest异常判断一般通过该对象的readystate和http状态码status来判断，JSONP的异常判断一般是onerror事件和超时timer来判断。")])]),t._v(" "),r("h2",{attrs:{id:"xmlhttprequest中readystate的5种值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest中readystate的5种值"}},[t._v("#")]),t._v(" XMLHttpRequest中readystate的5种值")]),t._v(" "),r("ul",[r("li",[t._v("0 ：（未初始化）（XMLHttpRequest）对象已创建，但是没有调用open()方法")]),t._v(" "),r("li",[t._v("1 ：（载入）已经调用了open()方法，但是没有发送请求")]),t._v(" "),r("li",[t._v("2 ：（载入完成）请求已发送完成")]),t._v(" "),r("li",[t._v("3 ：（交互）可以接收到部分响应数据")]),t._v(" "),r("li",[t._v("4 ：（完成）已经接收到全部数据，并且连接已关闭")])])])}),[],!1,null,null,null);e.default=i.exports}}]);