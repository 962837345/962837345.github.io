(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{624:function(s,t,a){"use strict";a.r(t);var n=a(6),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"随机数函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#随机数函数"}},[s._v("#")]),s._v(" 随机数函数")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("choice(seq)")]),s._v("：从序列的元素中随机挑选一个元素，seq 可以是一个列表、元组或字符串")])]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" random\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从0~9中随机挑选一个数字")]),s._v("\nrandom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("choice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[s._v("randrange([start,] stop [,step])")]),s._v("：返回指定递增基数集合中的一个随机数，基数（start）默认值为 1")])]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" random\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从 1-100 中选取一个奇数")]),s._v("\nrandom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("randrange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从 0-99 中选取一个随机数")]),s._v("\nrandom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("randrange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[a("code",[s._v("random()")]),s._v("：随机生成一个范围在"),a("code",[s._v("[0,1)")]),s._v("范围内的实数")])]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" random\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0.8156452628193048")]),s._v("\nrandom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("random"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[a("code",[s._v("seed([x])")]),s._v("：改变随机数生成器的种子 seed")])]),s._v(" "),a("p",[s._v("理解：改变随机数生成的生成机制")]),s._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[a("code",[s._v("shuffle(lst)")]),s._v("：将序列的所有元素随机排序,没有返回值，调用直接改变列表")])]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" random\n\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("list")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nrandom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("shuffle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [4, 3, 1, 2, 5]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"列表的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表的方法"}},[s._v("#")]),s._v(" 列表的方法")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("list.append(obj)")]),s._v("：在列表末尾添加新的对象")]),s._v(" "),a("li",[a("code",[s._v("list.count(obj)")]),s._v("： 统计某个元素在列表中出现的次数")]),s._v(" "),a("li",[a("code",[s._v("list.extend(seq)")]),s._v("：在列表末尾一次性追加另一个列表，会改变原列表")]),s._v(" "),a("li",[a("code",[s._v("list.index(obj)")]),s._v("：从列表中找出第一个匹配该值的索引")]),s._v(" "),a("li",[a("code",[s._v("list.insert(index, obj)")]),s._v("：将对象插入列表")]),s._v(" "),a("li",[a("code",[s._v("list.pop([index = -1])")]),s._v("：移除列表中的一个元素，无参数时默认移除最后一个元素")]),s._v(" "),a("li",[a("code",[s._v("list.remove(obj)")]),s._v("：移除列表中某个值的第一个匹配项")]),s._v(" "),a("li",[a("code",[s._v("list.reverse()")]),s._v("：反转列表")]),s._v(" "),a("li",[a("code",[s._v("list.sort(key = None, reverse = False)")]),s._v("：对原列表进行排序,"),a("code",[s._v("reverse = True")]),s._v("降序,"),a("code",[s._v("reverse = False")]),s._v("升序")])]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取列表的第二个元素")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tackSecond")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("elem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" elem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列表中的每个元素都是一个元组")]),s._v("\nrandom "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据列表元素中的第二个元素来排序")]),s._v("\nrandom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sort"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tackSecond"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("random"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [(4, 1), (2, 2), (1, 3), (3, 4)]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("ol",{attrs:{start:"10"}},[a("li",[a("code",[s._v("sorted(key = None, reverse = False)")]),s._v("：与"),a("code",[s._v("sort()")]),s._v("的区别是"),a("code",[s._v("sorted()")]),s._v("返回一个新的 list")]),s._v(" "),a("li",[a("code",[s._v("list.clear()")]),s._v("：清空列表")]),s._v(" "),a("li",[a("code",[s._v("list.copy()")]),s._v(": 复制列表")])]),s._v(" "),a("h3",{attrs:{id:"字典的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字典的方法"}},[s._v("#")]),s._v(" 字典的方法")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("dist.clear()")]),s._v("：删除字典内所有元素")]),s._v(" "),a("li",[a("code",[s._v("dist.copy()")]),s._v(": 返回一个字典的浅复制\n浅复制和直接赋值的区别：浅复制会深拷贝父对象（一级目录），但不会深拷贝子对象（二级目录）；直接赋值只是引用对象")])]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[s._v("dist1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xiaoming'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'num'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\ndist2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" dist1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 引用对象")]),s._v("\ndist3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" dist1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("copy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 深拷贝一级目录")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改name")]),s._v("\ndist1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'kellen'")]),s._v("\ndist1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'num'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("remove"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出结果")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dist1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# {'name': 'kellen', 'num': [2, 3]}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dist2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# {'name': 'kellen', 'num': [2, 3]}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dist3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# {'name': 'xiaoming', 'num': [2, 3]}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("dist3 的一级目录是深拷贝，所以不会被修改")]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("code",[s._v("dist.fromkeys(seq, val = None)")]),s._v("：创建一个新字典，以序列 seq 中元素做字典的 key，val 为字典所有键对应的初始值")])]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("list")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'haha'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hehe'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xixi'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\ndist "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\ndist "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fromkeys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#{'haha': None, 'hehe': None, 'xixi': None}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\ndist "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fromkeys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("222")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# {'haha': 222, 'hehe': 222, 'xixi': 222}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[a("code",[s._v("dist.get(key, default = None)")]),s._v("：返回指定键的值，如果键不在字典中返回 default 设置的默认值")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("key in dist")]),s._v("：判断 key 是否在 dist 中")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("dist.items()")]),s._v("：以列表返回可遍历的(键，值)元组数组，可以用"),a("code",[s._v("list()")]),s._v("转化为列表")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("dist.keys()")]),s._v("：返回一个迭代器，可以用"),a("code",[s._v("list()")]),s._v("来转化为包含所有 key 的列表")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("dist.values()")]),s._v("：返回一个迭代器，可以用"),a("code",[s._v("list()")]),s._v("来转化为包含所有 value 的列表")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("dist.setdefault(key, default = None)")]),s._v("：和"),a("code",[s._v("get()")]),s._v("类似，但如果键不存在于字典中，将会添加键并将值设为 default;存在则不改变，返回对应值")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("dist.update(dist2)")]),s._v("：把字典 dist2 的键值对更新到 dist 中,key 相同时，会覆盖 value，不相同时会新增该 key 和 value。与 js 中 Object.assign()作用差不多")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("pop(key, default)")]),s._v("：删除字典中给定 key 所对应的值，返回值为被删除的值。key 值必须给出。没有该 key 则返回 default 值")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("popitem()")]),s._v("：删除并返回字典中的最后一对键和值")])])]),s._v(" "),a("h3",{attrs:{id:"集合的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合的方法"}},[s._v("#")]),s._v(" 集合的方法")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("add()")]),s._v("：为集合添加元素,如果添加的元素在集合中已存在，则不执行任何操作")]),s._v(" "),a("li",[a("code",[s._v("clear()")]),s._v("：移除集合中的所有元素")]),s._v(" "),a("li",[a("code",[s._v("copy()")]),s._v("：拷贝一个集合")]),s._v(" "),a("li",[a("code",[s._v("difference()")]),s._v("：返回多个集合的差集")]),s._v(" "),a("li",[a("code",[s._v("difference_update()")]),s._v("：移除集合中的元素，该元素在指定的集合也存在")]),s._v(" "),a("li",[a("code",[s._v("discard()")]),s._v("：删除集合中指定的元素")]),s._v(" "),a("li",[a("code",[s._v("intersection()")]),s._v("：返回集合的交集，返回的是一个新的集合")]),s._v(" "),a("li",[a("code",[s._v("intersection_update()")]),s._v("：返回集合的交集，在原始的集合上移除不重叠的元素")]),s._v(" "),a("li",[a("code",[s._v("isdisjoint()")]),s._v("：判断两个集合是否包含相同的元素，如果没有返回"),a("code",[s._v("True")]),s._v(",如果有返回"),a("code",[s._v("False")])]),s._v(" "),a("li",[a("code",[s._v("issubset()")]),s._v("：判断指定集合是否为该方法参数集合的子集")]),s._v(" "),a("li",[a("code",[s._v("issuperset()")]),s._v("：判断该方法的参数集合是否为指定集合的子集")]),s._v(" "),a("li",[a("code",[s._v("pop()")]),s._v("：随机移除元素")]),s._v(" "),a("li",[a("code",[s._v("remove()")]),s._v("：移除指定元素")]),s._v(" "),a("li",[a("code",[s._v("symmetric_difference()")]),s._v("：返回两个集合中不重复的元素集合")]),s._v(" "),a("li",[a("code",[s._v("symmetric_difference_update()")]),s._v("：移除当前集合中在另一个指定集合相同的元素，并将另外一个指定集合中不同的元素插入到当前集合中")]),s._v(" "),a("li",[a("code",[s._v("union()")]),s._v("：返回两个集合的并集")]),s._v(" "),a("li",[a("code",[s._v("update()")]),s._v("：给集合添加元素,可以添加新的元素或集合到当前集合中，如果添加的元素已存在，则该元素只会出现一次")])])])}),[],!1,null,null,null);t.default=e.exports}}]);